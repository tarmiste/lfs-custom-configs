#!/bin/bash
set -e

export JH_PKG_DIR=openbox
SRC_DIR=${JH_SRC_ARCHIVE}${JH_SRC_SUBDIRS:+/${JH_PKG_DIR}}
BUILD_DIR=${JH_BUILD_ROOT}${JH_BUILD_SUBDIRS:+/${JH_PKG_DIR}}
mkdir -p $SRC_DIR
mkdir -p $BUILD_DIR

cd $SRC_DIR

PACKAGE=openbox-3.6.1.tar.gz
if [[ ! -f $PACKAGE ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE $PACKAGE
  else
    wget -T 30 -t 5 http://openbox.org/dist/openbox/openbox-3.6.1.tar.gz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/o/$PACKAGE
  fi
fi
echo "b72794996c6a3ad94634727b95f9d204  $PACKAGE" | md5sum -c -


cd $BUILD_DIR
find . -maxdepth 1 -mindepth 1 -type d | xargs rm -rf

case $PACKAGE in
  *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.lzma)
     tar -xvf $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR=`grep '[^./]\+' unpacked | head -n1 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.tar.lz)
     bsdtar -xvf $SRC_DIR/$PACKAGE 2> unpacked
     JH_UNPACKDIR=`head -n1 unpacked | cut  -d" " -f2 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.zip)
     zipinfo -1 $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR="$(sed 's@/.*@@' unpacked | uniq )"
     if test $(wc -w <<< $JH_UNPACKDIR) -eq 1; then
       unzip $SRC_DIR/$PACKAGE
     else
       JH_UNPACKDIR=${PACKAGE%.zip}
       unzip -d $JH_UNPACKDIR $SRC_DIR/$PACKAGE
     fi
     ;;
  *)
     JH_UNPACKDIR=$JH_PKG_DIR-build
     mkdir $JH_UNPACKDIR
     cp $SRC_DIR/$PACKAGE $JH_UNPACKDIR
     cp $(find . -mindepth 1 -maxdepth 1 -type l) $JH_UNPACKDIR
     ;;
esac
export JH_UNPACKDIR
cd $JH_UNPACKDIR

export LIBRARY_PATH=$XORG_PREFIX/lib
2to3 -w data/autostart/openbox-xdg-autostart &&
sed 's/python/python3/' -i data/autostart/openbox-xdg-autostart
./configure --prefix=/usr     \
            --sysconfdir=/etc \
            --disable-static  \
            --docdir=/usr/share/doc/openbox-3.6.1 &&
make
make -j1 install

for libdir in /lib /usr/lib $(find /opt -name lib); do
  find $libdir -name \*.la ! -path \*ImageMagick\* -delete
done


ldconfig

cp -rf /etc/xdg/openbox ~/.config


ls -d /usr/share/themes/*/openbox-3 | sed 's#.*es/##;s#/o.*##'

echo openbox > ~/.xinitrc

cat > ~/.xinitrc << "EOF"
display -backdrop -window root /path/to/beautiful/picture.jpeg
exec openbox
EOF

cat > ~/.xinitrc << "EOF"
# make an array which lists the pictures:
picture_list=(~/.config/backgrounds/*)
# create a random integer between 0 and the number of pictures:
random_number=$(( ${RANDOM} % ${#picture_list[@]} ))
# display the chosen picture:
display -backdrop -window root "${picture_list[${random_number}]}"
exec openbox
EOF

cat > ~/.xinitrc << "EOF"
. /etc/profile
picture_list=(~/.config/backgrounds/*)
random_number=$(( ${RANDOM} % ${#picture_list[*]} ))
display -backdrop -window root "${picture_list[${random_number}]}"
numlockx
eval $(dbus-launch --auto-syntax --exit-with-session)
lxpanel &
exec openbox
EOF

cd $BUILD_DIR
[[ -n "$JH_KEEP_FILES" ]] || rm -rf $JH_UNPACKDIR unpacked

exit