#!/bin/bash
set -e

export JH_PKG_DIR=opencv
SRC_DIR=${JH_SRC_ARCHIVE}${JH_SRC_SUBDIRS:+/${JH_PKG_DIR}}
BUILD_DIR=${JH_BUILD_ROOT}${JH_BUILD_SUBDIRS:+/${JH_PKG_DIR}}
mkdir -p $SRC_DIR
mkdir -p $BUILD_DIR

cd $SRC_DIR

PACKAGE=opencv-3.4.0.zip
if [[ ! -f $PACKAGE ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE $PACKAGE
  else
    wget -T 30 -t 5 https://downloads.sourceforge.net/opencvlibrary/opencv-3.4.0.zip ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/o/$PACKAGE
  fi
fi
echo "ed60f8bbe7a448f325d0a0f58fcf2063  $PACKAGE" | md5sum -c -

PACKAGE1=ippicv_2017u3_lnx_intel64_general_20170822.tgz
if [[ ! -f $PACKAGE1 ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE1 ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE1 $PACKAGE1
  else
    wget -T 30 -t 5 https://raw.githubusercontent.com/opencv/opencv_3rdparty/dfe3162c237af211e98b8960018b564bc209261d/ippicv/ippicv_2017u3_lnx_intel64_general_20170822.tgz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/i/$PACKAGE1
  fi
fi
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PACKAGE1 $BUILD_DIR

PACKAGE1=opencv_contrib-3.4.0.tar.gz
if [[ ! -f $PACKAGE1 ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE1 ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE1 $PACKAGE1
  else
    wget -T 30 -t 5 https://github.com/opencv/opencv_contrib/archive/3.4.0/opencv_contrib-3.4.0.tar.gz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/o/$PACKAGE1
  fi
fi
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PACKAGE1 $BUILD_DIR


cd $BUILD_DIR
find . -maxdepth 1 -mindepth 1 -type d | xargs rm -rf

case $PACKAGE in
  *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.lzma)
     tar -xvf $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR=`grep '[^./]\+' unpacked | head -n1 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.tar.lz)
     bsdtar -xvf $SRC_DIR/$PACKAGE 2> unpacked
     JH_UNPACKDIR=`head -n1 unpacked | cut  -d" " -f2 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.zip)
     zipinfo -1 $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR="$(sed 's@/.*@@' unpacked | uniq )"
     if test $(wc -w <<< $JH_UNPACKDIR) -eq 1; then
       unzip $SRC_DIR/$PACKAGE
     else
       JH_UNPACKDIR=${PACKAGE%.zip}
       unzip -d $JH_UNPACKDIR $SRC_DIR/$PACKAGE
     fi
     ;;
  *)
     JH_UNPACKDIR=$JH_PKG_DIR-build
     mkdir $JH_UNPACKDIR
     cp $SRC_DIR/$PACKAGE $JH_UNPACKDIR
     cp $(find . -mindepth 1 -maxdepth 1 -type l) $JH_UNPACKDIR
     ;;
esac
export JH_UNPACKDIR
cd $JH_UNPACKDIR

ipp_file=ippicv_2017u3_lnx_intel64_general_20170822.tgz &&
ipp_hash=$(md5sum ../$ipp_file | cut -d" " -f1) &&
ipp_dir=.cache/ippicv                           &&

mkdir -p $ipp_dir &&
cp ../$ipp_file $ipp_dir/$ipp_hash-$ipp_file
tar xf ../opencv_contrib-3.4.0.tar.gz
mkdir build &&
cd    build &&

cmake -DCMAKE_INSTALL_PREFIX=/usr      \
      -DCMAKE_BUILD_TYPE=Release       \
      -DENABLE_CXX11=ON                \
      -DBUILD_PERF_TESTS=OFF           \
      -DWITH_XINE=ON                   \
      -DBUILD_TESTS=OFF                \
      -DENABLE_PRECOMPILED_HEADERS=OFF \
      -DCMAKE_SKIP_RPATH=ON            \
      -DBUILD_WITH_DEBUG_INFO=OFF      \
      -Wno-dev  ..                     &&
make
make -j1 install             &&

case $(uname -m) in
  x86_64) ARCH=intel64 ;;
       *) ARCH=ia32    ;;
esac                     &&

cp -v 3rdparty/ippicv/ippicv_lnx/lib/$ARCH/libippicv.a /usr/lib &&
unset ARCH

for libdir in /lib /usr/lib $(find /opt -name lib); do
  find $libdir -name \*.la ! -path \*ImageMagick\* -delete
done


ldconfig

cd $BUILD_DIR
[[ -n "$JH_KEEP_FILES" ]] || rm -rf $JH_UNPACKDIR unpacked

exit