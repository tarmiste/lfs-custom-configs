#!/bin/bash
set -e

export JH_PKG_DIR=cyrus-sasl
SRC_DIR=${JH_SRC_ARCHIVE}${JH_SRC_SUBDIRS:+/${JH_PKG_DIR}}
BUILD_DIR=${JH_BUILD_ROOT}${JH_BUILD_SUBDIRS:+/${JH_PKG_DIR}}
mkdir -p $SRC_DIR
mkdir -p $BUILD_DIR

cd $SRC_DIR

PACKAGE=cyrus-sasl-2.1.26.tar.gz
if [[ ! -f $PACKAGE ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE $PACKAGE
  else
    wget -T 30 -t 5 ftp://ftp.cyrusimap.org/cyrus-sasl/cyrus-sasl-2.1.26.tar.gz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/c/$PACKAGE
  fi
fi
echo "a7f4e5e559a0e37b3ffc438c9456e425  $PACKAGE" | md5sum -c -

PATCH=cyrus-sasl-2.1.26-fixes-3.patch
if [[ ! -f $PATCH ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PATCH ]] ; then
    cp $JH_SRC_ARCHIVE/$PATCH $PATCH
  else
    wget -T 30 -t 5 http://www.linuxfromscratch.org/patches/blfs/svn/cyrus-sasl-2.1.26-fixes-3.patch ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/c/$PATCH
  fi
fi
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PATCH $BUILD_DIR

PATCH=cyrus-sasl-2.1.26-openssl-1.1.0-1.patch
if [[ ! -f $PATCH ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PATCH ]] ; then
    cp $JH_SRC_ARCHIVE/$PATCH $PATCH
  else
    wget -T 30 -t 5 http://www.linuxfromscratch.org/patches/blfs/svn/cyrus-sasl-2.1.26-openssl-1.1.0-1.patch ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/c/$PATCH
  fi
fi
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PATCH $BUILD_DIR


cd $BUILD_DIR
find . -maxdepth 1 -mindepth 1 -type d | xargs rm -rf

case $PACKAGE in
  *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.lzma)
     tar -xvf $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR=`grep '[^./]\+' unpacked | head -n1 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.tar.lz)
     bsdtar -xvf $SRC_DIR/$PACKAGE 2> unpacked
     JH_UNPACKDIR=`head -n1 unpacked | cut  -d" " -f2 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.zip)
     zipinfo -1 $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR="$(sed 's@/.*@@' unpacked | uniq )"
     if test $(wc -w <<< $JH_UNPACKDIR) -eq 1; then
       unzip $SRC_DIR/$PACKAGE
     else
       JH_UNPACKDIR=${PACKAGE%.zip}
       unzip -d $JH_UNPACKDIR $SRC_DIR/$PACKAGE
     fi
     ;;
  *)
     JH_UNPACKDIR=$JH_PKG_DIR-build
     mkdir $JH_UNPACKDIR
     cp $SRC_DIR/$PACKAGE $JH_UNPACKDIR
     cp $(find . -mindepth 1 -maxdepth 1 -type l) $JH_UNPACKDIR
     ;;
esac
export JH_UNPACKDIR
cd $JH_UNPACKDIR

patch -Np1 -i ../cyrus-sasl-2.1.26-fixes-3.patch &&
patch -Np1 -i ../cyrus-sasl-2.1.26-openssl-1.1.0-1.patch &&
autoreconf -fi &&

./configure --prefix=/usr        \
            --sysconfdir=/etc    \
            --enable-auth-sasldb \
            --with-dbpath=/var/lib/sasl/sasldb2 \
            --with-saslauthd=/var/run/saslauthd &&
make -j1
make -j1 install &&
install -v -dm755 /usr/share/doc/cyrus-sasl-2.1.26 &&
install -v -m644  doc/{*.{html,txt,fig},ONEWS,TODO} \
    saslauthd/LDAP_SASLAUTHD /usr/share/doc/cyrus-sasl-2.1.26 &&
install -v -dm700 /var/lib/sasl

for libdir in /lib /usr/lib $(find /opt -name lib); do
  find $libdir -name \*.la ! -path \*ImageMagick\* -delete
done


ldconfig

BOOTPKG_DIR=blfs-bootscripts
BOOTSRC_DIR=${JH_SRC_ARCHIVE}${JH_SRC_SUBDIRS:+/${BOOTPKG_DIR}}
BOOTBUILD_DIR=${JH_BUILD_ROOT}${JH_BUILD_SUBDIRS:+/${BOOTPKG_DIR}}
mkdir -p $BOOTSRC_DIR
mkdir -p $BOOTBUILD_DIR

pushd $BOOTSRC_DIR
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20180105.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $JH_SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
  fi
  rm -f $BOOTBUILD_DIR/unpacked
fi

cd $BOOTBUILD_DIR
if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    tar -xvf $BOOTSRC_DIR/$BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTSRC_DIR/$BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
make -j1 install-saslauthd

popd
cd $BUILD_DIR
[[ -n "$JH_KEEP_FILES" ]] || rm -rf $JH_UNPACKDIR unpacked

exit